rm(list = ls())
library(plyr)
library(survival)
library(gdata)
library(survival)
library(reshape2)
library(ggplot2); library(reshape2)
library(limma)
library(ggsignif)
library(lmerTest)
library(car)

## set defaults
theme_set(theme_bw(26) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.key = element_blank()))
update_geom_defaults("point", aes(size = 3))

## load flow values

setwd("~/Desktop/TN-09_GitHub/data_files")

flow.57.rna = read.delim("TN-09_panel_57_compiled_flow_data_RNA-seq_subjects_only.txt", stringsAsFactors = F)

flow = flow.57.rna

## load counts
setwd("~/Desktop/TN-09_GitHub/data_files")

CPM= readRDS("combined_TN-09_TMM_counts_after_redo_qc_071916.rds")

## load anno
anno.keep <- read.delim("anno_TN-09_keep.libs.txt", stringsAsFactors=FALSE)
anno.keep$date2 = as.Date(anno.keep$date, format = "%m/%d/%y")

anno = anno.keep
colnames(anno) = gsub("Day", "days", colnames(anno))
anno$id.days = paste(anno$id, anno$days, sep = "_")

## load auc

auc <- read.delim("TN-09_2hr_C-peptide_AUC_with_normalization.txt")
auc$days = auc$week*7
auc$id.days = paste(auc$id, auc$days, sep = "_")

anno.auc = merge(anno, auc, by = "id.days")
auc.sub = subset(anno.auc, libID %in% anno$libID)

DF.anno = read.delim("TN-09_autoantibody_levels_long_format.txt", sep = "\t", header = T, stringsAsFactors =F)

var = c("mIAA")
to.plot = subset(DF.anno, DF.anno$variable == var) # all samples

to.plot = subset(DF.anno, DF.anno$variable == var & DF.anno$treatment == "CTLA-4Ig") # subset to active only
colnames(to.plot) = gsub("Age.at.Enrollment", "Age", colnames(to.plot))
to.plot$group = ifelse(to.plot$Age > median(to.plot$Age), "older", "younger")
to.plot.V0 = subset(to.plot, Visit == 0)
to.plot.older = subset(to.plot, group == "older")
to.plot.younger = subset(to.plot, group == "younger")
to.plot.V0$abGr = ifelse(to.plot.V0$value > median(to.plot.V0$value), "high", "low")

prob1 = 0.75

qtop = quantile(to.plot$slope, probs= prob1)
to.plot$quart = ifelse(to.plot$slope>=qtop, "slow",
 			ifelse(to.plot$slope<=qtop, "fast", "middle"))
			
#
fast = subset(to.plot, quart == "fast")
slow = subset(to.plot, quart == "slow")

flow$quart  = ifelse(flow$id %in% fast$id, "fast",
				ifelse(flow$id %in% slow$id, "slow", "other"))

flow.var = c("Lymph/CD14-/CD3+CD19-", "Lymph/CD14-/CD3-CD19+", "Mono/CD3-CD19-/CD14+")

param = c("Ratio")

flow.plot = subset(flow, !quart == "other" & Population.Name %in% flow.var & Parameter == param)

##
## normalize flow values by Cell type

xnames = unique(flow.plot$Population.Name)
ncx = length(xnames)

DF <- flow.plot
DF = DF[FALSE,]
DF = data.frame(DF, zValue = as.numeric(), stringsAsFactors = F)

for (i in 1:ncx) { 
  q = as.character(xnames[i])
  qsub = subset(flow.plot, Population.Name == q)
  qsub$zValue = (qsub$value-mean(qsub$value))/sd(qsub$value)
  DF = rbind(DF, qsub)
  }

DF$age = ifelse(DF$id %in% to.plot.older$id, "older", 
			ifelse(DF$id %in% to.plot.younger$id, "younger","other"))

colnames(DF) = gsub("quart", "Group", colnames(DF))
DF$Group = gsub("slow", "R", DF$Group)
DF$Group = gsub("fast", "NR", DF$Group)

## tabulate summary stats

tgc <- ddply(DF, c("Population.Name", "Group",  "visitDay"), summarise,
               N    = length(Group),
               mean = mean(zValue),
			   median = median(zValue),
               sd   = sd(zValue),
               se   = sd / sqrt(N),
			   mad = mad(zValue)
)
tgc = na.omit(tgc)
tgc$cells = ifelse(tgc$Population.Name == "Lymph/CD14-/CD3-CD19+", "B cells",
				ifelse(tgc$Population.Name == "Lymph/CD14-/CD3+CD19-", "T cells",
					ifelse(tgc$Population.Name == "Mono/CD3-CD19-/CD14+", "Monocytes","other")))
#
tgc$cells = factor(tgc$cells, levels = c("B cells", "T cells", "Monocytes"))
## plot normalized values

dev.off()
quartz(height =8, width =16, dpi =72);
theme_set(theme_bw(36) + theme(panel.grid.major = element_blank(), 
                         panel.grid.minor = element_blank()) +
                         theme(legend.key = element_blank()))
update_geom_defaults("point", aes(size = 6))
update_geom_defaults("line", aes(size = 2))

cbPalette = c("#2b8cbe","#d7191c")

ggplot(tgc, aes(x = visitDay, y = (mean))) + geom_line(aes(colour = Group)) + facet_grid(~cells) + scale_colour_manual(values=cbPalette)
last_plot() + geom_errorbar(data = tgc, aes(ymin=mean-se, ymax=mean+se, width=2, colour = Group))
last_plot() + labs (x = "Time (days)", y = "Percentage, normalized\nMean +/- SE")
last_plot() + geom_vline(xintercept = 700, lty = "dotted", size = 1.5)
last_plot() + scale_x_continuous(breaks = c(0, 250, 500, 750))

## models

# "Lymph/CD14-/CD3-CD19+" "Mono/CD3-CD19-/CD14+"  "Lymph/CD14-/CD3+CD19-"
cell.var = c("Lymph/CD14-/CD3-CD19+")
to.model = subset(DF, Population.Name == cell.var)

table(to.model$Population.Name, to.model$visitDay, to.model$Group); summary(to.model$value)

m1 = lmer(zValue~visitDay+Group + (1 | id), to.model); summary(m1) # 
m2 = lmer(zValue~visitDay+Group+ visitDay*Group + (1 | id), to.model); summary(m2) # 
Anova(m2, type="II") 

plot(fitted(m1), 
     residuals(m1))
	 
plot(fitted(m2), 
     residuals(m2))
AIC(m1)
AIC(m2)	 

library(car)
Anova(m1, type="II") 
Anova(m2, type="II") 


## compare normalized versus non- normalized values

dev.off()
quartz(height =8, width =8, dpi =72);
update_geom_defaults("point", aes(size = 3))
ggplot(to.model, aes(x = log10(value), y = zValue)) + geom_point()

